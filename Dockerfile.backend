ARG DEVICE=cpu

FROM continuumio/miniconda3:24.11.1-0 AS build_base
# Allow commercial use of the container
ENV CONDA_CHANNELS="conda-forge"

# ----------------
# System dependencies
# ----------------
RUN apt-get update && apt-get install --no-install-recommends -y \
    # TODO: While some dependencies are specified as `git+https://...`, we need
    # git to be installed in the container to fetch the dependencies. After pinning
    # properly, this can be removed.
    git \
    && apt clean \
    && rm -rf /var/lib/apt/lists/*

# ----------------
# Python dependencies
# ----------------
COPY ./backend/requirements-pinned.txt /tmp/requirements-pinned.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-deps -r /tmp/requirements-pinned.txt

WORKDIR /workspace/
# Provides `adumbra` as a package. We can also `pip install .` it if desired.
COPY ./backend/ /workspace/

# ----------------
# Populate git cache
# ----------------
FROM build_base AS build_git_cache
COPY ./.git/ /workspace/.git/
RUN python adumbra/config/version_util.py
# Artifact: ./adumbra/git_cache.json

# ----------------
# Image for other stages to use
# ----------------
FROM build_base AS adumbra-python
COPY --from=build_git_cache /workspace/adumbra/git_cache.json /workspace/adumbra/git_cache.json
# Confirm git cache worked and python package is accessible
RUN python -c 'from adumbra.config import CONFIG; print(f"adumbra version: {CONFIG.version}")'

# ----------------
# Celery worker container
# ----------------
FROM adumbra-python AS workers
RUN apt-get update && apt-get install --no-install-recommends -y \
    freeglut3-dev \
    libfontconfig \
    libxkbcommon-x11-0 \
    libdbus-1-dev \
    && apt clean \
    && rm -rf /var/lib/apt/lists/*
COPY ./xrayrecon/ /tmp/xrayrecon/
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install /tmp/xrayrecon
EXPOSE 5555
CMD ["celery", "-A", "adumbra.workers", "worker", "-l", "info"]

# ----------------
# Webserver container
# ----------------
FROM adumbra-python AS webserver
# We have to install the same dependencies as the workers since
# we import the split_volume function which calls the worker function.
# Since this calls the worker function (hence the worker container
# dependencies).
RUN apt-get update && apt-get install --no-install-recommends -y \
    freeglut3-dev \
    libfontconfig \
    libxkbcommon-x11-0 \
    libdbus-1-dev \
    && apt clean \
    && rm -rf /var/lib/apt/lists/*
COPY ./xrayrecon/ /tmp/xrayrecon/
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install /tmp/xrayrecon
CMD ["gunicorn", "-c", "adumbra/gunicorn_config.py", "adumbra.webserver:app", "--no-sendfile", "--timeout", "180"]

# ----------------
# IA container
# ----------------
FROM adumbra-python AS adumbra-ia-cuda
RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=cache,target=/opt/conda/pkgs \
    conda install -c nvidia -c pytorch -y \
    pytorch torchvision pytorch-cuda=12.4 cudnn

FROM adumbra-python AS adumbra-ia-cpu
RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=cache,target=/opt/conda/pkgs \
    conda install -c pytorch -y pytorch torchvision

FROM adumbra-ia-${DEVICE} AS adumbra-ia
# ARG goes away each stage, so we need to re-define it here
ARG DEVICE=cpu
ENV DEVICE=${DEVICE}

# Reads environment variables and installs sam/zim/etc as needed with minimal
# dependencies
COPY ./backend/requirements-ia/ /tmp/requirements-ia/
RUN --mount=type=cache,target=/root/.cache/pip \
    echo "Installing requirements with device ${DEVICE}" \
    && python /tmp/requirements-ia/install_requirements.py

COPY ./models/ /models/
EXPOSE 6001
CMD ["fastapi", "run", "adumbra/ia", "--host", "0.0.0.0", "--port", "6001"]
